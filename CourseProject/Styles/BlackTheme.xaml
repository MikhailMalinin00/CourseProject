<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="blackBackground">
        <Setter Property="Control.Background" Value="#FF181818"/>
    </Style>
    <Style x:Key="yellowBackground">
        <Setter Property="Control.Background" Value="#FFE98C1A"/>
    </Style>
    <Style x:Key="text">
        <Setter Property="Control.Foreground" Value="White"/>
    </Style>


    <Style x:Key="BlackAndWhite">
        <Setter Property="Control.Background">
            <Setter.Value>
                <LinearGradientBrush>
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Color="#2f2f2f" Offset="0" />
                        <GradientStop Color="Black" Offset="1" />
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="hello">
        <Setter Property="Control.Background">
            <Setter.Value>
                <LinearGradientBrush>
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Color="#1f1f1f" Offset="1" />
                        <GradientStop Color="#0f0f0f" Offset="0" />
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>





    <!--Дататриггеры для добавления фильма-->
    <Style x:Key="focusTitle" TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=filmName, Path=IsFocused}" Value="True">
                <Setter Property="FontSize" Value="13"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="focusDir" TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=filmDirector, Path=IsFocused}" Value="True">
                <Setter Property="FontSize" Value="13"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="focusDura" TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=duration, Path=IsFocused}" Value="True">
                <Setter Property="FontSize" Value="13"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="focusRate" TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=rating, Path=IsFocused}" Value="True">
                <Setter Property="FontSize" Value="13"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="focusGen" TargetType="TextBlock">
        <!--TODO: сделать адекватный триггер для комбобокса-->
        <Style.Triggers>
            <!--<DataTrigger Binding="{Binding ElementName=genre, Path=SelectedItem.Content}" Value="Боевик">
                <Setter Property="FontSize" Value="13"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=genre, Path=SelectedItem.Content}" Value="Комедия">
                <Setter Property="FontSize" Value="13"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=genre, Path=SelectedItem.Content}" Value="Драма">
                <Setter Property="FontSize" Value="13"/>
            </DataTrigger>-->
        </Style.Triggers>
    </Style>






    <!--ИвентТриггеры-->
    <Style x:Key="logoShowOnLoad" TargetType="Image">
        <Style.Setters>
            <Setter Property="Width" Value="350"/>
        </Style.Setters>

        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Width" 
                              From="0" To="300" Duration="0:0:0.8"  />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>



    <!--Шаблоны для кнопок в ViewAllFilms-->
    <!--TODO: onMouseOver цвет-->
    <ControlTemplate x:Key="templateSearch" TargetType="Button">
        <Border Height="30" Width="140" CornerRadius="10" Background="AliceBlue">
            <ContentControl HorizontalAlignment="Center" VerticalAlignment="Center"  Foreground="Black"></ContentControl>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="templateAdd" TargetType="Button">
        <Border Height="30" Width="140" CornerRadius="10" Background="AliceBlue">
            <ContentControl HorizontalAlignment="Center" VerticalAlignment="Center" Content="Добавить фильм" Foreground="Black"></ContentControl>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="templateRedact" TargetType="Button">
        <Border Height="30" Width="140" CornerRadius="10" Background="AliceBlue">
            <ContentControl HorizontalAlignment="Center" VerticalAlignment="Center" Content="Редактировать фильм" Foreground="Black"></ContentControl>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="templateDel" TargetType="Button">
        <Border Height="30" Width="140" CornerRadius="10" Background="AliceBlue">
            <ContentControl HorizontalAlignment="Center" VerticalAlignment="Center" Content="Удалить" Foreground="Black"></ContentControl>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="templateAll" TargetType="Button">
        <Border Height="30" Width="140" CornerRadius="10" Background="AliceBlue">
            <ContentControl HorizontalAlignment="Center" VerticalAlignment="Center" Content="Показать все фильмы" Foreground="Black"></ContentControl>
        </Border>
    </ControlTemplate>

    <!--<ControlTemplate x:Key="templateFilter" TargetType="Button">
        <Border Height="30" Width="140" CornerRadius="10" Background="AliceBlue">
            <ContentControl HorizontalAlignment="Center" VerticalAlignment="Center" Content="{DynamicResource filter}" Foreground="Black"></ContentControl>
        </Border>
    </ControlTemplate>-->

    <ControlTemplate x:Key="templateAddSchedule" TargetType="Button">
        <Border Height="30" Width="140" CornerRadius="10" Background="AliceBlue">
            <ContentControl HorizontalAlignment="Center" VerticalAlignment="Center" Content="Добавить расписание" Foreground="Black"></ContentControl>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="templateBack" TargetType="Button">
        <Border Height="30" Width="140" CornerRadius="10" Background="AliceBlue">
            <ContentControl HorizontalAlignment="Center" VerticalAlignment="Center" Content="Назад" Foreground="Black"></ContentControl>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="templateSelectSchedule" TargetType="Button">
        <Border Height="30" Width="140" CornerRadius="10" Background="AliceBlue">
            <ContentControl HorizontalAlignment="Center" VerticalAlignment="Center" Content="Выбрать сеанс" Foreground="Black"></ContentControl>
        </Border>
    </ControlTemplate>




    <!--Пользовательский элемент (9 лаба)-->
    <Style x:Key="colorDC" TargetType="Label">
        <Setter Property="Control.Foreground" Value="AliceBlue"/>
        <Setter Property="Control.FontSize" Value="13"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=textBoxUC, Path=IsFocused}">
                <Setter Property="FontSize" Value="20"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="gradientBack" TargetType="Grid">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="1,0" MappingMode="RelativeToBoundingBox" StartPoint="0,1">
                    <GradientStop Color="#FFFFBB00"/>
                    <GradientStop Color="#ff7f08" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>



    <!--Кнопка "заказать билет" в главном окне юзера-->
    <Style x:Key="buttonUI" TargetType="Button">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="15" />
            </Style>
        </Style.Resources>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="1,0" MappingMode="RelativeToBoundingBox" StartPoint="0,1">
                    <GradientStop Color="#ffb700"/>
                    <GradientStop Color="#ff7f08" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="3">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" MappingMode="RelativeToBoundingBox" StartPoint="0,1">
                            <GradientStop Color="#ffb700"/>
                            <GradientStop Color="#ff7f08" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>




    <!--Текстики войти\зарегистрироваться-->
    <Style x:Key="loginRegText" TargetType="Button">

        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="DemiBold"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>


    </Style>





    <Style x:Key="headerText" TargetType="Button">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>



    <Style x:Key="listViewSelect" TargetType="ListViewItem">
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="BorderBrush" Value="DimGray"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Grid x:Name="Grid">
                        <Border x:Name="SimpleBackground" Visibility="Visible" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Border>
                        <Border x:Name="OnSelectedBackground" Visibility="Collapsed" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{x:Null}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Border>
                        <ContentPresenter x:Name="ContentPresenter"></ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="OnSelectedBackground" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="OnSelectedBackground" Property="Visibility" Value="Collapsed"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="buttonTicket" TargetType="Button">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="18" />
            </Style>
        </Style.Resources>
        <Setter Property="Height" Value="70"/>
        <Setter Property="MaxHeight" Value="100"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Margin" Value="0 0 10 20"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="1,0" MappingMode="RelativeToBoundingBox" StartPoint="0,1">
                    <GradientStop Color="#ffb700"/>
                    <GradientStop Color="#ff7f08" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="3">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" MappingMode="RelativeToBoundingBox" StartPoint="0,1">
                            <GradientStop Color="#ffb700"/>
                            <GradientStop Color="#ff7f08" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="textboxtest" TargetType="TextBox">
        <Setter Property="Width" Value="180" />
        <Setter Property="Height" Value="28" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Margin" Value="10 0" />
        <Setter Property="Padding" Value="3 1 3 0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="10"/>
            </Style>
        </Style.Resources>
    </Style>


    <Style x:Key="passwordboxtest" TargetType="PasswordBox">
        <Setter Property="Width" Value="180" />
        <Setter Property="Height" Value="28" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Margin" Value="10 0" />
        <Setter Property="Padding" Value="3 1 3 0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="10"/>
            </Style>
        </Style.Resources>
    </Style>



    <Style x:Key="signInButton" TargetType="Button">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="15" />
            </Style>
        </Style.Resources>

        <Setter Property="Width" Value="130" />
        <Setter Property="Height" Value="42" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="DemiBold"/>

        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="1,0" MappingMode="RelativeToBoundingBox" StartPoint="0,1">
                    <GradientStop Color="#ffb700"/>
                    <GradientStop Color="#ff7f08" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="3">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" MappingMode="RelativeToBoundingBox" StartPoint="0,1">
                            <GradientStop Color="#ffb700"/>
                            <GradientStop Color="#ff7f08" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>





    <!--ComboBox-->
    <Style x:Key="defCombo" TargetType="ComboBox" >
        <Setter Property="DisplayMemberPath" Value="Genre" />
    </Style>
    <Style x:Key="defItem" TargetType="ComboBoxItem" />
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="#FF3F3F3F"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="1" />
            <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="#FF3F3F3F" 
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,1,0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="#FF3F3F3F"
                            Foreground="#cccccc"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="#FF3F3F3F"

                                BorderThickness="1"
                                BorderBrush="#888888"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
    <!-- ComboBoxItem -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <!--Поиск на главной странице-->
    <Style TargetType="TextBox" x:Key="searchTextBoxMain">
        <Setter Property="Background" Value="#FF3F3F3F" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#cccccc"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#aaaaaa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--<Style x:Key="CustomHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Background" Value="#cccccc" />
        <Setter Property="Foreground" Value="#FF07034B"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#cccccc" Offset="0"/>
                    <GradientStop Color="#dddddd" Offset="1.0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>-->


    <Style x:Key="fore" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FFC8D6E0"/>
    </Style>


</ResourceDictionary>